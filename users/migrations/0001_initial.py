# Generated by Django 4.2.7 on 2023-12-27 15:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('directions', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('patronymic', models.CharField(blank=True, max_length=150, verbose_name='patronymic')),
                ('role', models.CharField(choices=[('admin', 'Админ'), ('teacher', 'Преподаватель'), ('student', 'Студент')], default='admin', max_length=50, verbose_name='role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, max_length=150, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='directions.department')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='directions.institute')),
            ],
            options={
                'verbose_name': 'Teacher',
            },
            bases=('users.user',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('group', models.CharField(blank=True, max_length=10, verbose_name='group')),
                ('graduate_year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[users.models.year_validation], verbose_name='graduate year')),
                ('teacher_approved', models.BooleanField(default=False, verbose_name='teacher approved')),
                ('theme', models.CharField(blank=True, max_length=150, verbose_name='theme')),
                ('theme_approved', models.BooleanField(default=False, verbose_name='theme approved')),
                ('status', models.CharField(blank=True, choices=[('topic_choice', 'Выбор темы'), ('theoretical_aspects', 'Изучение теоретических аспектов темы'), ('data_collection_and_analysis', 'Сбор и анализ данных'), ('main_wokr', 'Написание основной части / Разработка'), ('decorator_fqw', 'Оформление ВКР'), ('finished', 'Завершено')], default='topic_choice', max_length=50, verbose_name='status')),
                ('direction', models.ForeignKey(blank=True, max_length=150, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='directions.direction')),
                ('institute', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='directions.institute')),
                ('prefer_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='users.teacher')),
            ],
            options={
                'verbose_name': 'Student',
            },
            bases=('users.user',),
        ),
    ]
